# ==========================================
# üê≥ Docker Compose - Desarrollo Local
# ==========================================
# Solo servicios de base de datos y herramientas
# Las aplicaciones (API, frontend, dashboard) se ejecutan localmente

services:
  # ==========================================
  # üçÉ MongoDB Database
  # ==========================================
  mongodb:
    image: mongo:7-jammy
    container_name: noticias-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: noticias_pachuca
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - noticias-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # üî¥ Redis Cache
  # ==========================================
  redis:
    image: redis:7-alpine
    container_name: noticias-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - noticias-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ==========================================
  # üñ•Ô∏è Mongo Express (GUI para MongoDB)
  # ==========================================
  mongo-express:
    image: mongo-express:latest
    container_name: noticias-mongo-gui
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - noticias-network
    restart: unless-stopped

  # ==========================================
  # üî¥ RedisInsight (GUI para Redis)
  # ==========================================
  redis-insight:
    image: redis/redisinsight:latest
    container_name: noticias-redis-gui
    ports:
      - "8001:5540"
    volumes:
      - redis_insight_data:/data
    networks:
      - noticias-network
    restart: unless-stopped

# ==========================================
# üì¶ Vol√∫menes Persistentes
# ==========================================
volumes:
  mongodb_data:
    driver: local
    name: noticias_mongodb_data
  redis_data:
    driver: local
    name: noticias_redis_data
  redis_insight_data:
    driver: local
    name: noticias_redis_insight_data

# ==========================================
# üåê Red Personalizada
# ==========================================
networks:
  noticias-network:
    driver: bridge
    name: noticias_network
