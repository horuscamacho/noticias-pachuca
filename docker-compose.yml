services:
  # ==========================================
  # üü¢ NestJS API
  # ==========================================
  api:
    build:
      context: ./packages/api-nueva
      dockerfile: Dockerfile
      target: development
    container_name: noticias-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - API_PREFIX=api
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/noticias_pachuca?authSource=admin
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_USERNAME=admin
      - DB_PASSWORD=password123
      - DB_NAME=noticias_pachuca
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis123
      - REDIS_DB=0
      - CACHE_TTL=600
      - DEFAULT_CACHE_TTL=300
      - JWT_SECRET=noticias-pachuca-super-secret-access-key-2025-very-secure-min-32-chars
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_SECRET=noticias-pachuca-super-secret-refresh-key-2025-very-secure-min-32-chars
      - JWT_REFRESH_EXPIRES_IN=7d
    volumes:
      - ./packages/api-nueva:/app:cached
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - noticias-network
    restart: unless-stopped

  # ==========================================
  # üçÉ MongoDB Database
  # ==========================================
  mongodb:
    image: mongo:7-jammy
    container_name: noticias-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: noticias_pachuca
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    networks:
      - noticias-network
    restart: unless-stopped

  # ==========================================
  # üî¥ Redis Cache
  # ==========================================
  redis:
    image: redis:7-alpine
    container_name: noticias-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - noticias-network
    restart: unless-stopped

  # ==========================================
  # üçÉ MongoDB Compass (GUI Oficial)
  # ==========================================
  mongo-express:
    image: mongo-express:latest
    container_name: noticias-mongo-gui
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - noticias-network
    restart: unless-stopped

  # ==========================================
  # üî¥ RedisInsight (GUI Oficial)
  # ==========================================
  redis-insight:
    image: redis/redisinsight:latest
    container_name: noticias-redis-gui
    ports:
      - "8001:5540"
    volumes:
      - redis_insight_data:/data
    networks:
      - noticias-network
    restart: unless-stopped

# ==========================================
# üì¶ Vol√∫menes Persistentes
# ==========================================
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  redis_insight_data:
    driver: local

# ==========================================
# üåê Red Personalizada
# ==========================================
networks:
  noticias-network:
    driver: bridge