# ==========================================
# üéØ STAGE 1: Base
# ==========================================
FROM node:20-alpine AS base
WORKDIR /app

# Verificar que yarn est√© disponible (ya viene en node:20-alpine)
RUN yarn --version

# Copiar archivos de dependencias
COPY package.json yarn.lock* ./

# ==========================================
# üõ†Ô∏è STAGE 2: Development
# ==========================================
FROM base AS development
ENV NODE_ENV=development

# Instalar todas las dependencias (incluyendo devDependencies)
RUN yarn install --frozen-lockfile

# Instalar NestJS CLI globalmente
RUN yarn global add @nestjs/cli

# Copiar c√≥digo fuente
COPY . .

# Exponer puerto
EXPOSE 3000

# Comando de desarrollo con hot reload
CMD ["yarn", "start:dev"]

# ==========================================
# üèóÔ∏è STAGE 3: Build
# ==========================================
FROM base AS build
ENV NODE_ENV=production

# Instalar todas las dependencias para build
RUN yarn install --frozen-lockfile

# Copiar c√≥digo fuente
COPY . .

# Build de la aplicaci√≥n
RUN yarn build

# ==========================================
# üöÄ STAGE 4: Production
# ==========================================
FROM node:20-alpine AS production
WORKDIR /app

# Copiar package.json y yarn.lock
COPY package.json yarn.lock* ./

# Instalar solo dependencias de producci√≥n
RUN yarn install --frozen-lockfile --production && \
    yarn cache clean

# Copiar aplicaci√≥n compilada desde build stage
COPY --from=build /app/dist ./dist

# Crear usuario no-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001
USER nestjs

# Exponer puerto
EXPOSE 3000

# Comando de producci√≥n
CMD ["node", "dist/main"]