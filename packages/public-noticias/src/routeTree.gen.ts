/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegistroRouteImport } from './routes/registro'
import { Route as PlanesRouteImport } from './routes/planes'
import { Route as PerfilRouteImport } from './routes/perfil'
import { Route as PagoRouteImport } from './routes/pago'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DesignSystemRouteImport } from './routes/design-system'
import { Route as CrearColumnaRouteImport } from './routes/crear-columna'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ArticuloIdRouteImport } from './routes/articulo.$id'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const RegistroRoute = RegistroRouteImport.update({
  id: '/registro',
  path: '/registro',
  getParentRoute: () => rootRouteImport,
} as any)
const PlanesRoute = PlanesRouteImport.update({
  id: '/planes',
  path: '/planes',
  getParentRoute: () => rootRouteImport,
} as any)
const PerfilRoute = PerfilRouteImport.update({
  id: '/perfil',
  path: '/perfil',
  getParentRoute: () => rootRouteImport,
} as any)
const PagoRoute = PagoRouteImport.update({
  id: '/pago',
  path: '/pago',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DesignSystemRoute = DesignSystemRouteImport.update({
  id: '/design-system',
  path: '/design-system',
  getParentRoute: () => rootRouteImport,
} as any)
const CrearColumnaRoute = CrearColumnaRouteImport.update({
  id: '/crear-columna',
  path: '/crear-columna',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticuloIdRoute = ArticuloIdRouteImport.update({
  id: '/articulo/$id',
  path: '/articulo/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/crear-columna': typeof CrearColumnaRoute
  '/design-system': typeof DesignSystemRoute
  '/login': typeof LoginRoute
  '/pago': typeof PagoRoute
  '/perfil': typeof PerfilRoute
  '/planes': typeof PlanesRoute
  '/registro': typeof RegistroRoute
  '/articulo/$id': typeof ArticuloIdRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/crear-columna': typeof CrearColumnaRoute
  '/design-system': typeof DesignSystemRoute
  '/login': typeof LoginRoute
  '/pago': typeof PagoRoute
  '/perfil': typeof PerfilRoute
  '/planes': typeof PlanesRoute
  '/registro': typeof RegistroRoute
  '/articulo/$id': typeof ArticuloIdRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/crear-columna': typeof CrearColumnaRoute
  '/design-system': typeof DesignSystemRoute
  '/login': typeof LoginRoute
  '/pago': typeof PagoRoute
  '/perfil': typeof PerfilRoute
  '/planes': typeof PlanesRoute
  '/registro': typeof RegistroRoute
  '/articulo/$id': typeof ArticuloIdRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/crear-columna'
    | '/design-system'
    | '/login'
    | '/pago'
    | '/perfil'
    | '/planes'
    | '/registro'
    | '/articulo/$id'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/crear-columna'
    | '/design-system'
    | '/login'
    | '/pago'
    | '/perfil'
    | '/planes'
    | '/registro'
    | '/articulo/$id'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/crear-columna'
    | '/design-system'
    | '/login'
    | '/pago'
    | '/perfil'
    | '/planes'
    | '/registro'
    | '/articulo/$id'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CrearColumnaRoute: typeof CrearColumnaRoute
  DesignSystemRoute: typeof DesignSystemRoute
  LoginRoute: typeof LoginRoute
  PagoRoute: typeof PagoRoute
  PerfilRoute: typeof PerfilRoute
  PlanesRoute: typeof PlanesRoute
  RegistroRoute: typeof RegistroRoute
  ArticuloIdRoute: typeof ArticuloIdRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/demo-names'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/demo-names'
  id: '__root__' | '/api/demo-names'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/registro': {
      id: '/registro'
      path: '/registro'
      fullPath: '/registro'
      preLoaderRoute: typeof RegistroRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/planes': {
      id: '/planes'
      path: '/planes'
      fullPath: '/planes'
      preLoaderRoute: typeof PlanesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/perfil': {
      id: '/perfil'
      path: '/perfil'
      fullPath: '/perfil'
      preLoaderRoute: typeof PerfilRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pago': {
      id: '/pago'
      path: '/pago'
      fullPath: '/pago'
      preLoaderRoute: typeof PagoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/design-system': {
      id: '/design-system'
      path: '/design-system'
      fullPath: '/design-system'
      preLoaderRoute: typeof DesignSystemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crear-columna': {
      id: '/crear-columna'
      path: '/crear-columna'
      fullPath: '/crear-columna'
      preLoaderRoute: typeof CrearColumnaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articulo/$id': {
      id: '/articulo/$id'
      path: '/articulo/$id'
      fullPath: '/articulo/$id'
      preLoaderRoute: typeof ArticuloIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CrearColumnaRoute: CrearColumnaRoute,
  DesignSystemRoute: DesignSystemRoute,
  LoginRoute: LoginRoute,
  PagoRoute: PagoRoute,
  PerfilRoute: PerfilRoute,
  PlanesRoute: PlanesRoute,
  RegistroRoute: RegistroRoute,
  ArticuloIdRoute: ArticuloIdRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
